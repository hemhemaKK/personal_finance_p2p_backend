# 💰 Personal Finance & Peer-to-Peer Payment System

![Project Status](https://img.shields.io/badge/status-completed-brightgreen)
![Node.js](https://img.shields.io/badge/Node.js-v22.17.0-brightgreen)
![MongoDB](https://img.shields.io/badge/MongoDB-Atlas-blue)

---

## 🚀 Overview

Manage your personal finances efficiently and perform **secure peer-to-peer (P2P) money transfers**.  
Track expenses, set budgets, achieve financial goals, and transfer money safely—all in one system!  

---

## ✨ Features Implemented

### 💵 Expense & Income Tracking
- ✅ Create, update, and delete expenses or income  
- ✅ Add custom categories for detailed tracking (e.g., groceries, salary)  
- ✅ Filter transactions by date, category, or amount  

### 📊 Budget Management
- ✅ Set monthly or yearly budgets  
- ✅ Track spending in real-time against budgets  
- ✅ Receive notifications when nearing or exceeding limits  

### 🎯 Financial Goals
- ✅ Set and manage personal financial goals  
- ✅ Track progress toward goals with real-time updates  

### 💸 Peer-to-Peer (P2P) Transfers
- ✅ Secure money transfers to other users  
- ✅ Request payments from users  
- ✅ View transaction history (completed & pending)  

### 📈 Transaction History & Reports
- ✅ Full history of income, expenses, and transfers  
- ✅ Generate monthly/yearly summaries  
- ✅ Filter reports by type, date, or category  

### 🔔 Notifications & Alerts
- ✅ Notify users of successful payments, failed transfers, or budget alerts  

---

## 🛠️ Tech Stack

- **Backend:** Node.js, Express.js  
- **Database:** MongoDB (Mongoose)  
- **Authentication:** JWT (JSON Web Tokens)  
- **Security:** Role-Based Access Control (RBAC), Data Encryption  
- **Notifications:** Email via SMTP  

---

## ⚡ Getting Started

### Prerequisites
- Node.js >= 18  
- MongoDB (local or Atlas)  
- npm or yarn  

### Installation
```bash
# Clone repository
git clone https://github.com/your-username/finance_management_p2p.git
cd finance_management_p2p

# Install dependencies
npm install

# Create a .env file with required secrets
PORT=5000
MONGO_URI=your_mongodb_connection_string
JWT_SECRET=your_jwt_secret
EMAIL_FROM=your_email
SMTP_HOST=smtp.gmail.com
SMTP_PORT=587
SMTP_USER=your_email
SMTP_PASS=your_password

# Start server
npm run dev
